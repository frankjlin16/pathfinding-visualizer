{"version":3,"sources":["logo.svg","pathfinder/node.jsx","pathfinder/pathfinder.jsx","App.js","reportWebVitals.js","index.js"],"names":["Node","this","props","row","column","isStart","isFinish","onMouseDown","type","className","Component","Pathfinder","state","grid","createGrid","setState","console","log","map","rowIndex","node","nodeIndex","handleMouseDown","currentRow","push","createNode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAAe,I,gDCYAA,E,4JAPd,WAAU,IAAD,EACgDC,KAAKC,MAArDC,EADA,EACAA,IAAKC,EADL,EACKA,OAAQC,EADb,EACaA,QAASC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,YAClCC,EAAOH,EAAU,aAAeC,EAAW,cAAgB,GACjE,OAAO,qBAAKG,UAAS,eAAUD,GAAQD,YAAa,kBAAMA,EAAYJ,EAAKC,U,GAJ1DM,aCObC,G,kNACLC,MAAQ,CAAEC,KAAM,I,uDAEhB,WACC,IAAMA,EAAOC,IACbb,KAAKc,SAAS,CAAEF,W,6BAGjB,SAAgBV,EAAKC,GACpBY,QAAQC,IAAR,UAAed,EAAf,YAAsBC,M,oBAGvB,WAAU,IAAD,OACAS,EAASZ,KAAKW,MAAdC,KACR,OACC,qBAAKJ,UAAU,OAAf,SACEI,EAAKK,KAAI,SAACf,EAAKgB,GACf,OACC,8BACEhB,EAAIe,KAAI,SAACE,EAAMC,GAAe,IACtBlB,EAAmCiB,EAAnCjB,IAAKC,EAA8BgB,EAA9BhB,OAAQC,EAAsBe,EAAtBf,QAASC,EAAac,EAAbd,SAC9B,OACC,cAAC,EAAD,CAECH,IAAKA,EACLC,OAAQA,EACRC,QAASA,EACTC,SAAUA,EACVC,YAAa,SAACJ,EAAKC,GAAN,OAAiB,EAAKkB,gBAAgBnB,EAAKC,KALnDiB,OALCF,Y,GAlBST,cAwCnBI,EAAa,WAElB,IADA,IAAMD,EAAO,GACJV,EAAM,EAAGA,EAAM,KAAMA,EAAK,CAElC,IADA,IAAMoB,EAAa,GACVnB,EAAS,EAAGA,EAAS,KAAMA,EACnCmB,EAAWC,KAAKC,EAAWtB,EAAKC,IAEjCS,EAAKW,KAAKD,GAEX,OAAOV,GAGFY,EAAa,SAACtB,EAAKC,GACxB,MAAO,CACND,MACAC,SACAC,QA7DqB,KA6DZF,GA5De,KA4DWC,EACnCE,SA5DsB,KA4DZH,GA3De,KA2DYC,IAIxBO,IC5DAe,MARf,WACC,OACC,qBAAKjB,UAAU,MAAf,SACC,cAAC,EAAD,OCKYkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.de535b29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\n\nimport \"./node.css\";\n\nclass Node extends Component {\n\trender() {\n\t\tconst { row, column, isStart, isFinish, onMouseDown } = this.props;\n\t\tconst type = isStart ? \"node-start\" : isFinish ? \"node-finish\" : \"\";\n\t\treturn <div className={`node ${type}`} onMouseDown={() => onMouseDown(row, column)} />;\n\t}\n}\n\nexport default Node;\n","import React, { Component } from \"react\";\nimport Node from \"./node\";\n// import dijkstra\n\nimport \"./pathfinder.css\";\n\nconst START_NODE_ROW = 25;\nconst START_NODE_COLUMN = 10;\nconst FINISH_NODE_ROW = 25;\nconst FINISH_NODE_COLUMN = 40;\n\nclass Pathfinder extends Component {\n\tstate = { grid: [] };\n\n\tcomponentDidMount() {\n\t\tconst grid = createGrid();\n\t\tthis.setState({ grid });\n\t}\n\n\thandleMouseDown(row, column) {\n\t\tconsole.log(`${row}-${column}`);\n\t}\n\n\trender() {\n\t\tconst { grid } = this.state;\n\t\treturn (\n\t\t\t<div className=\"grid\">\n\t\t\t\t{grid.map((row, rowIndex) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={rowIndex}>\n\t\t\t\t\t\t\t{row.map((node, nodeIndex) => {\n\t\t\t\t\t\t\t\tconst { row, column, isStart, isFinish } = node;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\t\t\t\tkey={nodeIndex}\n\t\t\t\t\t\t\t\t\t\trow={row}\n\t\t\t\t\t\t\t\t\t\tcolumn={column}\n\t\t\t\t\t\t\t\t\t\tisStart={isStart}\n\t\t\t\t\t\t\t\t\t\tisFinish={isFinish}\n\t\t\t\t\t\t\t\t\t\tonMouseDown={(row, column) => this.handleMouseDown(row, column)}\n\t\t\t\t\t\t\t\t\t></Node>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst createGrid = () => {\n\tconst grid = [];\n\tfor (let row = 0; row < 50; ++row) {\n\t\tconst currentRow = [];\n\t\tfor (let column = 0; column < 50; ++column) {\n\t\t\tcurrentRow.push(createNode(row, column));\n\t\t}\n\t\tgrid.push(currentRow);\n\t}\n\treturn grid;\n};\n\nconst createNode = (row, column) => {\n\treturn {\n\t\trow,\n\t\tcolumn,\n\t\tisStart: row === START_NODE_ROW && column === START_NODE_COLUMN,\n\t\tisFinish: row === FINISH_NODE_ROW && column === FINISH_NODE_COLUMN,\n\t};\n};\n\nexport default Pathfinder;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Pathfinder from \"./pathfinder/pathfinder\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Pathfinder />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}